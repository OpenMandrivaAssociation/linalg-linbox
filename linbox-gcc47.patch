--- ./linbox/algorithms/blackbox-container-symmetric.h.orig	2012-06-07 02:30:32.000000000 -0600
+++ ./linbox/algorithms/blackbox-container-symmetric.h	2012-10-02 13:20:53.840875313 -0600
@@ -59,7 +59,7 @@ namespace LinBox
 		template<class Vector>
 		BlackboxContainerSymmetric (const Blackbox *D, const Field &F, const Vector &u0) :
 			BlackboxContainerBase<Field, _Blackbox> (D, F)
-		{ init (u0, u0); }
+		{ this->init (u0, u0); }
 		BlackboxContainerSymmetric (const Blackbox *D, const Field &F, RandIter &g) :
 			BlackboxContainerBase<Field, _Blackbox> (D, F)
 		{ this->init (g); }
--- ./interfaces/driver/lb-domain-functor.h.orig	2012-06-07 02:30:26.000000000 -0600
+++ ./interfaces/driver/lb-domain-functor.h	2012-10-02 13:20:53.834901357 -0600
@@ -52,7 +52,7 @@ public:
  * Macro for automatic code generation *
  ***************************************/
 #define LB_DOMAIN_VISIT(D)				\
-void visit(const DomainEnvelope<D> &d){apply(d);}
+void visit(const DomainEnvelope<D> &d){this->apply(d);}
 
 
 /*******************************************************************************
--- ./interfaces/driver/lb-blackbox-functor.h.orig	2012-06-07 02:30:26.000000000 -0600
+++ ./interfaces/driver/lb-blackbox-functor.h	2012-10-02 13:20:53.833905696 -0600
@@ -53,7 +53,7 @@ public:
  * Macro for automatic code generation *
  ***************************************/
 #define LB_BLACKBOX_VISIT(B)				\
-void visit(const B &d){apply(d);}
+void visit(const B &d){this->apply(d);}
 
 
 /**********************************************************************************
--- ./interfaces/driver/lb-vector-functor.h.orig	2012-06-07 02:30:26.000000000 -0600
+++ ./interfaces/driver/lb-vector-functor.h	2012-10-02 13:20:53.836892684 -0600
@@ -54,7 +54,7 @@ public:
  * Macro for automatic code generation *
  ***************************************/
 #define LB_VECTOR_VISIT(B)				\
-	void visit(const B &d){apply(d);}
+	void visit(const B &d){this->apply(d);}
 
 
 /**********************************************************************************
